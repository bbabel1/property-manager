generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

/// Models
model Property {
  id                     String          @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  name                   String          @db.VarChar(127)
  structureDescription   String?         @map("structure_description")
  addressLine1           String          @map("address_line1") @db.VarChar(100)
  addressLine2           String?         @map("address_line2") @db.VarChar(100)
  addressLine3           String?         @map("address_line3") @db.VarChar(100)
  city                   String?         @db.VarChar(100)
  state                  String?         @db.VarChar(100)
  postalCode             String          @map("postal_code") @db.VarChar(20)
  buildiumPropertyId     Int?            @map("buildium_property_id")
  rentalOwnerIds         Int[]           @map("rental_owner_ids")
  reserve                Decimal?        @db.Decimal(12, 2)
  yearBuilt              Int?            @map("year_built")
  createdAt              DateTime        @default(now()) @map("created_at") @db.Timestamptz(6)
  updatedAt              DateTime        @updatedAt @map("updated_at") @db.Timestamptz(6)
  country                Country         @map("country")
  rentalSubType          RentalSubType   @map("rental_sub_type")
  operatingBankAccountId String?         @map("operating_bank_account_id") @db.Uuid
  primaryOwner           String?         @map("primary_owner") @db.VarChar(255)
  leases                 Lease[]
  propertyStaff          PropertyStaff[]
  ownership              Ownership[]
  operatingBankAccount   BankAccount?    @relation(fields: [operatingBankAccountId], references: [id])
  units                  Unit[]

  @@index([name])
  @@map("properties")
}

model Unit {
  id            String         @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  propertyId    String         @map("property_id") @db.Uuid
  unitNumber    String         @map("unit_number") @db.VarChar(30)
  unitSize      Int?           @map("unit_size")
  marketRent    Decimal?       @map("market_rent") @db.Decimal(12, 2)
  addressLine1  String         @map("address_line1") @db.VarChar(100)
  addressLine2  String?        @map("address_line2") @db.VarChar(100)
  addressLine3  String?        @map("address_line3") @db.VarChar(100)
  city          String?        @db.VarChar(100)
  state         String?        @db.VarChar(100)
  postalCode    String         @map("postal_code") @db.VarChar(20)
  country       Country        @map("country")
  unitBedrooms  UnitBedrooms?  @map("unit_bedrooms")
  unitBathrooms UnitBathrooms? @map("unit_bathrooms")
  description   String?
  createdAt     DateTime       @default(now()) @map("created_at") @db.Timestamptz(6)
  updatedAt     DateTime       @updatedAt @map("updated_at") @db.Timestamptz(6)
  leases        Lease[]
  property      Property       @relation(fields: [propertyId], references: [id], onDelete: Cascade)

  @@unique([propertyId, unitNumber])
  @@index([propertyId])
  @@map("units")
}

model Owner {
  id                           String        @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  firstName                    String?       @map("first_name") @db.VarChar(127)
  lastName                     String?       @map("last_name") @db.VarChar(127)
  isCompany                    Boolean       @default(false) @map("is_company")
  companyName                  String?       @map("company_name") @db.VarChar(127)
  dateOfBirth                  DateTime?     @map("date_of_birth") @db.Date
  managementAgreementStartDate DateTime?     @map("management_agreement_start_date") @db.Date
  managementAgreementEndDate   DateTime?     @map("management_agreement_end_date") @db.Date
  email                        String?       @db.VarChar(255)
  alternateEmail               String?       @map("alternate_email") @db.VarChar(255)
  phoneHome                    String?       @map("phone_home") @db.VarChar(20)
  phoneWork                    String?       @map("phone_work") @db.VarChar(20)
  phoneMobile                  String?       @map("phone_mobile") @db.VarChar(20)
  phoneFax                     String?       @map("phone_fax") @db.VarChar(20)
  addressLine1                 String        @map("address_line1") @db.VarChar(100)
  addressLine2                 String?       @map("address_line2") @db.VarChar(100)
  addressLine3                 String?       @map("address_line3") @db.VarChar(100)
  city                         String?       @db.VarChar(100)
  state                        String?       @db.VarChar(100)
  postalCode                   String        @map("postal_code") @db.VarChar(20)
  country                      Country       @map("country")
  comment                      String?
  taxPayerId                   String?       @map("tax_payer_id") @db.VarChar(255)
  taxPayerType                 TaxPayerType? @map("tax_payer_type")
  taxPayerName1                String?       @map("tax_payer_name1") @db.VarChar(40)
  taxPayerName2                String?       @map("tax_payer_name2") @db.VarChar(40)
  taxAddressLine1              String?       @map("tax_address_line1") @db.VarChar(100)
  taxAddressLine2              String?       @map("tax_address_line2") @db.VarChar(100)
  taxAddressLine3              String?       @map("tax_address_line3") @db.VarChar(100)
  taxCity                      String?       @map("tax_city") @db.VarChar(100)
  taxState                     String?       @map("tax_state") @db.VarChar(100)
  taxPostalCode                String?       @map("tax_postal_code") @db.VarChar(20)
  taxCountry                   Country?      @map("tax_country")
  createdAt                    DateTime      @default(now()) @map("created_at") @db.Timestamptz(6)
  updatedAt                    DateTime      @updatedAt @map("updated_at") @db.Timestamptz(6)
  ownership                    Ownership[]

  @@index([lastName, firstName])
  @@map("owners")
}

model Lease {
  id         BigInt         @id @default(autoincrement())
  propertyId String         @db.Uuid
  startDate  DateTime
  endDate    DateTime?
  status     LeaseStatus    @default(ACTIVE)
  depositAmt Decimal?       @db.Decimal(12, 2)
  notes      String?
  createdAt  DateTime       @default(now())
  updatedAt  DateTime       @updatedAt
  unitId     String         @db.Uuid
  property   Property       @relation(fields: [propertyId], references: [id])
  unit       Unit           @relation(fields: [unitId], references: [id])
  contacts   LeaseContact[]

  @@index([propertyId])
  @@index([unitId, status])
}

model LeaseContact {
  id                BigInt      @id @default(autoincrement())
  leaseId           BigInt
  role              ContactRole
  fullName          String
  email             String?
  phone             String?
  dateOfBirth       DateTime?
  isRentResponsible Boolean     @default(false)
  createdAt         DateTime    @default(now())
  updatedAt         DateTime    @updatedAt
  lease             Lease       @relation(fields: [leaseId], references: [id], onDelete: Cascade)

  @@index([leaseId, role])
}

model Staff {
  id            BigInt          @id @default(autoincrement())
  firstName     String
  lastName      String
  email         String?
  phone         String?
  role          StaffRole       @default(PROPERTY_MANAGER)
  isActive      Boolean         @default(true)
  createdAt     DateTime        @default(now())
  updatedAt     DateTime        @updatedAt
  propertyStaff PropertyStaff[]

  @@index([lastName, firstName])
}

model Ownership {
  id                     String   @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  primary                Boolean  @default(false)
  ownershipPercentage    Decimal? @map("ownership_percentage") @db.Decimal(5, 2)
  disbursementPercentage Decimal? @map("disbursement_percentage") @db.Decimal(5, 2)
  ownerName              String?  @map("owner_name") @db.VarChar(255)
  ownerId                String   @map("owner_id") @db.Uuid
  propertyId             String   @map("property_id") @db.Uuid
  createdAt              DateTime @default(now()) @map("created_at") @db.Timestamptz(6)
  updatedAt              DateTime @updatedAt @map("updated_at") @db.Timestamptz(6)
  owner                  Owner    @relation(fields: [ownerId], references: [id], onDelete: Cascade)
  property               Property @relation(fields: [propertyId], references: [id], onDelete: Cascade)

  @@unique([ownerId, propertyId])
  @@index([ownerId])
  @@index([propertyId])
  @@map("ownership")
}

model BankAccount {
  id                        String           @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  buildiumBankId            Int?             @map("buildium_bank_id")
  name                      String           @db.VarChar(255)
  description               String?
  bankAccountType           BankAccountType  @map("bank_account_type")
  country                   Country          @map("country")
  accountNumber             String?          @map("account_number") @db.VarChar(255)
  routingNumber             String?          @map("routing_number") @db.VarChar(255)
  enableRemoteCheckPrinting Boolean          @default(false) @map("enable_remote_check_printing")
  enableLocalCheckPrinting  Boolean          @default(false) @map("enable_local_check_printing")
  checkLayoutType           CheckLayoutType? @map("check_layout_type")
  signatureHeading          String?          @map("signature_heading") @db.VarChar(255)
  fractionalNumber          String?          @map("fractional_number") @db.VarChar(255)
  bankInformationLine1      String?          @map("bank_information_line1") @db.VarChar(255)
  bankInformationLine2      String?          @map("bank_information_line2") @db.VarChar(255)
  bankInformationLine3      String?          @map("bank_information_line3") @db.VarChar(255)
  bankInformationLine4      String?          @map("bank_information_line4") @db.VarChar(255)
  bankInformationLine5      String?          @map("bank_information_line5") @db.VarChar(255)
  companyInformationLine1   String?          @map("company_information_line1") @db.VarChar(255)
  companyInformationLine2   String?          @map("company_information_line2") @db.VarChar(255)
  companyInformationLine3   String?          @map("company_information_line3") @db.VarChar(255)
  companyInformationLine4   String?          @map("company_information_line4") @db.VarChar(255)
  companyInformationLine5   String?          @map("company_information_line5") @db.VarChar(255)
  createdAt                 DateTime         @default(now()) @map("created_at") @db.Timestamptz(6)
  updatedAt                 DateTime         @updatedAt @map("updated_at") @db.Timestamptz(6)
  properties                Property[]

  @@map("bank_accounts")
}

model PropertyStaff {
  id         BigInt    @id @default(autoincrement())
  propertyId String    @db.Uuid
  staffId    BigInt
  role       StaffRole @default(PROPERTY_MANAGER)
  assignedAt DateTime  @default(now())
  property   Property  @relation(fields: [propertyId], references: [id], onDelete: Cascade)
  staff      Staff     @relation(fields: [staffId], references: [id], onDelete: Cascade)

  @@unique([propertyId, staffId, role])
  @@index([propertyId])
  @@index([staffId])
}

model Account {
  id                String  @id @default(cuid())
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String?
  access_token      String?
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String?
  session_state     String?
  user              User    @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model User {
  id            String    @id @default(cuid())
  name          String?
  email         String?   @unique
  emailVerified DateTime?
  image         String?
  accounts      Account[]
  sessions      Session[]
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}

/// Enums
enum LeaseStatus {
  PENDING
  ACTIVE
  RENEWALPENDING
  ENDED
}

enum ContactRole {
  PRIMARY_TENANT
  TENANT
  COSIGNER
}

enum StaffRole {
  PROPERTY_MANAGER
  ASSISTANT_MANAGER
  MAINTENANCE_COORDINATOR
  ACCOUNTING
  ADMIN
}

enum Country {
  Afghanistan
  Akrotiri
  Albania
  Algeria
  AmericanSamoa
  Andorra
  Angola
  Anguilla
  Antarctica
  AntiguaandBarbuda
  Argentina
  Armenia
  Aruba
  AshmoreandCartierIslands
  Australia
  Austria
  Azerbaijan
  Bahamas
  Bahrain
  Bangladesh
  Barbados
  BassasdaIndia
  Belarus
  Belgium
  Belize
  Benin
  Bermuda
  Bhutan
  Bolivia
  BosniaandHerzegovina
  Botswana
  BouvetIsland
  Brazil
  BritishIndianOceanTerritory
  BritishVirginIslands
  Brunei
  Bulgaria
  BurkinaFaso
  Burma
  Burundi
  Cambodia
  Cameroon
  Canada
  CapeVerde
  CaymanIslands
  CentralAfricanRepublic
  Chad
  Chile
  China
  ChristmasIsland
  ClippertonIsland
  CocosIslands
  Colombia
  Comoros
  DemocraticRepublicOfTheCongo
  RepublicOfTheCongo
  CookIslands
  CoralSeaIslands
  CostaRica
  CotedIvoire
  Croatia
  Cuba
  Cyprus
  CzechRepublic
  Denmark
  Dhekelia
  Djibouti
  Dominica
  DominicanRepublic
  Ecuador
  Egypt
  ElSalvador
  EquatorialGuinea
  Eritrea
  Estonia
  Ethiopia
  EuropaIsland
  FalklandIslands
  FaroeIslands
  Fiji
  Finland
  France
  FrenchGuiana
  FrenchPolynesia
  FrenchSouthernandAntarcticLands
  Gabon
  Gambia
  GazaStrip
  Georgia
  Germany
  Ghana
  Gibraltar
  GloriosoIslands
  Greece
  Greenland
  Grenada
  Guadeloupe
  Guam
  Guatemala
  Guernsey
  Guinea
  GuineaBissau
  Guyana
  Haiti
  HeardIslandandMcDonaldIslands
  VaticanCity
  Honduras
  HongKong
  Hungary
  Iceland
  India
  Indonesia
  Iran
  Iraq
  Ireland
  IsleofMan
  Israel
  Italy
  Jamaica
  JanMayen
  Japan
  Jersey
  Jordan
  JuandeNovaIsland
  Kazakhstan
  Kenya
  Kiribati
  NorthKorea
  SouthKorea
  Kuwait
  Kyrgyzstan
  Laos
  Latvia
  Lebanon
  Lesotho
  Liberia
  Libya
  Liechtenstein
  Lithuania
  Luxembourg
  Macau
  Macedonia
  Madagascar
  Malawi
  Malaysia
  Maldives
  Mali
  Malta
  MarshallIslands
  Martinique
  Mauritania
  Mauritius
  Mayotte
  Mexico
  Micronesia
  Moldova
  Monaco
  Mongolia
  Montserrat
  Morocco
  Mozambique
  Namibia
  Nauru
  NavassaIsland
  Nepal
  Netherlands
  NetherlandsAntilles
  NewCaledonia
  NewZealand
  Nicaragua
  Niger
  Nigeria
  Niue
  NorfolkIsland
  NorthernMarianaIslands
  Norway
  Oman
  Pakistan
  Palau
  Panama
  PapuaNewGuinea
  ParacelIslands
  Paraguay
  Peru
  Philippines
  PitcairnIslands
  Poland
  Portugal
  PuertoRico
  Qatar
  Reunion
  Romania
  Russia
  Rwanda
  SaintHelena
  SaintKittsandNevis
  SaintLucia
  SaintPierreandMiquelon
  SaintVincentandtheGrenadines
  Samoa
  SanMarino
  SaoTomeandPrincipe
  SaudiArabia
  Senegal
  SerbiaandMontenegro
  Seychelles
  SierraLeone
  Singapore
  Slovakia
  Slovenia
  SolomonIslands
  Somalia
  SouthAfrica
  SouthGeorgiaandtheSouthSandwichIslands
  Spain
  SpratlyIslands
  SriLanka
  Sudan
  Suriname
  Svalbard
  Swaziland
  Sweden
  Switzerland
  Syria
  Taiwan
  Tajikistan
  Tanzania
  Thailand
  TimorLeste
  Togo
  Tokelau
  Tonga
  TrinidadandTobago
  TromelinIsland
  Tunisia
  Turkey
  Turkmenistan
}

enum RentalSubType {
  CondoTownhome
  MultiFamily
  SingleFamily
  Industrial
  Office
  Retail
  ShoppingCenter
  Storage
  ParkingSpace
}

enum UnitBedrooms {
  NotSet
  Studio
  OneBed
  TwoBed
  ThreeBed
  FourBed
  FiveBed
  SixBed
  SevenBed
  EightBed
  NineBedPlus
}

enum UnitBathrooms {
  NotSet
  OneBath
  OnePointFiveBath
  TwoBath
  TwoPointFiveBath
  ThreeBath
  ThreePointFiveBath
  FourBath
  FourPointFiveBath
  FiveBath
  FivePlusBath
}

enum TaxPayerType {
  SSN
  EIN
}

enum BankAccountType {
  Checking
  Savings
}

enum CheckLayoutType {
  Voucher1StubBottomMemo1Signature
  Voucher2StubBottomMemo1Signature
  Voucher2StubBottomMemo2Signatures
  Voucher2StubTopMemo
  Voucher2StubsPrePrintedLayout
}
