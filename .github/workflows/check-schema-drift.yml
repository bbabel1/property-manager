name: Check Supabase schema drift

on:
  push:
    branches: [main, release/*]
  pull_request:
    branches: [main]

# Restrict default token permissions
permissions:
  contents: read

jobs:
  schema-drift:
    runs-on: ubuntu-latest
    steps:
      - name: Check secrets configured
        id: check
        env:
          SA: ${{ secrets.SUPABASE_ACCESS_TOKEN }}
          SR_S: ${{ secrets.SUPABASE_PROJECT_REF_STAGING }}
          SR_P: ${{ secrets.SUPABASE_PROJECT_REF_PRODUCTION }}
        run: |
          if [ -n "$SA" ] && { [ -n "$SR_S" ] || [ -n "$SR_P" ]; }; then
            echo "enabled=true" >> "$GITHUB_OUTPUT"
          else
            echo "enabled=false" >> "$GITHUB_OUTPUT"
          fi

      - name: Checkout
        if: ${{ steps.check.outputs.enabled == 'true' }}
        uses: actions/checkout@v4

      - name: Setup Node.js
        if: ${{ steps.check.outputs.enabled == 'true' }}
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Install Supabase CLI (pinned major)
        if: ${{ steps.check.outputs.enabled == 'true' }}
        run: |
          npm i -g @supabase/cli@^1.0.0

      - name: Link to Supabase project (production by default)
        if: ${{ steps.check.outputs.enabled == 'true' }}
        env:
          SUPABASE_ACCESS_TOKEN: ${{ secrets.SUPABASE_ACCESS_TOKEN }}
        run: |
          # Prefer staging ref if provided, otherwise fall back to production ref
          PROJECT_REF="${{ secrets.SUPABASE_PROJECT_REF_STAGING }}"
          if [ -z "$PROJECT_REF" ]; then
            PROJECT_REF="${{ secrets.SUPABASE_PROJECT_REF_PRODUCTION }}"
          fi
          if [ -z "$PROJECT_REF" ]; then
            echo "::error::No Supabase project ref provided. Set SUPABASE_PROJECT_REF_STAGING or SUPABASE_PROJECT_REF_PRODUCTION in repo secrets."
            exit 1
          fi
          supabase link --project-ref "$PROJECT_REF"

      - name: Check for schema drift (public schema only)
        if: ${{ steps.check.outputs.enabled == 'true' }}
        env:
          SUPABASE_ACCESS_TOKEN: ${{ secrets.SUPABASE_ACCESS_TOKEN }}
        run: |
          set -e
          echo "Running schema drift check against linked remote..."
          DIFF_OUTPUT=$(supabase db diff --linked --schema public)
          echo "$DIFF_OUTPUT"
          if ! echo "$DIFF_OUTPUT" | egrep -q "No schema changes found|No changes"; then
            echo "::error::Schema drift detected â€“ remote schema and migrations differ."
            exit 1
          fi

      - name: Skip (missing Supabase secrets)
        if: ${{ steps.check.outputs.enabled != 'true' }}
        run: |
          echo "Supabase secrets not configured; skipping schema drift check."
