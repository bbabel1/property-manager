name: Database Migrations

on:
  # Manual trigger with target environment
  workflow_dispatch:
    inputs:
      environment:
        description: "Target environment"
        required: true
        type: choice
        default: staging
        options:
          - staging
          - production
  # Auto-run after CI completes successfully on main
  workflow_run:
    workflows: ["CI"]
    types: [completed]

permissions:
  contents: read

jobs:
  migrate:
    if: |
      github.event_name == 'workflow_dispatch' ||
      (github.event_name == 'workflow_run' && github.event.workflow_run.conclusion == 'success' && github.ref == 'refs/heads/main')
    runs-on: ubuntu-latest
    environment: ${{ inputs.environment || 'staging' }}
    concurrency:
      group: migrations-${{ github.ref }}-${{ inputs.environment || 'staging' }}
      cancel-in-progress: false
    steps:
      - name: Checkout
        uses: actions/checkout@v5

      - name: Setup Supabase CLI
        uses: supabase/setup-cli@v1
        with:
          version: latest

      - name: Select project ref (staging/production)
        id: select
        shell: bash
        run: |
          if [ "${{ inputs.environment || 'staging' }}" = "production" ]; then
            echo "ref=${{ secrets.SUPABASE_PROJECT_REF_PRODUCTION }}" >> $GITHUB_OUTPUT
          else
            echo "ref=${{ secrets.SUPABASE_PROJECT_REF_STAGING }}" >> $GITHUB_OUTPUT
          fi

      - name: Link Supabase project
        env:
          SUPABASE_ACCESS_TOKEN: ${{ secrets.SUPABASE_ACCESS_TOKEN }}
        run: supabase link --project-ref "${{ steps.select.outputs.ref }}"

      - name: Push database migrations (gated on CI success)
        env:
          SUPABASE_ACCESS_TOKEN: ${{ secrets.SUPABASE_ACCESS_TOKEN }}
        run: |
          supabase db push

      - name: Post-migration sanity check
        run: |
          echo "Migrations applied to project ref ${{ steps.select.outputs.ref }}"

