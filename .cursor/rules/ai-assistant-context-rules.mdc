---
alwaysApply: true
---

AI Assistant Context Rules:

1. **Environment variable limitations**: AI assistants cannot access process.env directly
   - Always use scripts with dotenv.config() for environment access
   - Never try to access environment variables in direct code

2. **Script execution pattern**:
   - Create scripts in scripts/buildium/sync/ directory
   - Use existing scripts as templates
   - Always clean up temporary scripts after use

3. **Buildium API access**:
   - Use direct API calls, not MCP tools
   - Follow authentication pattern with client credentials
   - Use proper error handling and logging

4. **File creation limitations**:
   - Cannot create files directly in some contexts
   - Use terminal commands or provide file content for manual creation
   - Always verify file creation before proceeding

5. **Error handling expectations**:
   - Expect environment loading issues
   - Handle missing dependencies gracefully
   - Provide clear error messages and solutions

6. **Quick reference usage**:
   - Always check docs/QUICK_REFERENCE.md first
   - Use established patterns from existing scripts
   - Follow project conventions for naming and structure

7. **Common workflow for API requests**:
   - Copy existing script template
   - Modify for target entity/ID
   - Run with npx tsx
   - Clean up temporary files
   - Document results

8. **Buildium documentation reference**:
   - ALWAYS reference the indexed "Open API, powered by Buildium (v1)" documentation first for any Buildium API questions
   - Use this official OpenAPI spec as the authoritative source for endpoints, request/response schemas, and API behavior
   - ALWAYS reference docs/BUILDIUM_API_QUICK_REFERENCE.md for authentication patterns and script templates
   - ALWAYS reference docs/QUICK_REFERENCE.md for Buildium script patterns and commands
   - Use docs/buildium-integration-guide.md for complex integration scenarios
   - Use docs/buildium-authentication-guide.md for authentication issues
   - Use docs/buildium-property-import-guide.md for property-specific operations
